import 'package:flutter/material.dart';
import 'package:praktekin/category_screen.dart';
import 'package:praktekin/detailcategory_screen.dart';
import 'package:praktekin/model/categories.dart';
import 'package:praktekin/model/data_user.dart';


class MainScreen extends StatelessWidget {
  final String appName;
  const MainScreen({Key? key, required this.appName}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final double height = MediaQuery.sizeOf(context).height;

    return Scaffold(
      appBar: AppBar(
        title: Text(
          appName,
          style: TextStyle(
              fontWeight: FontWeight.bold, fontSize: 24.0, color: Colors.white),
        ),
        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
      ),

      floatingActionButton: AnimatedOpacity(opacity: 1,
        duration: Duration(milliseconds: 1000) ,
        child: FloatingActionButton( tooltip: 'to top screen',
          child: Icon(Icons.arrow_upward, color: Colors.white,),
          onPressed: (){},// _scrollToTop,
        ),
      ),

      body: SafeArea(
        child: SingleChildScrollView(
          child: Container(
            margin: EdgeInsets.all(16),
            child: Column(
              mainAxisAlignment: MainAxisAlignment.start,
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                // User Greeting
                GreetingContainer(),

                // Widget Carousel
                CarouselContainer(),

                // Categories
                CategoryMenu(),

                // Content
                ContentMenu(),
              ],
            ),
          ),
        ),
      ),
    );
  }
}

class GreetingContainer extends StatelessWidget {
  GreetingContainer({Key? key}) : super(key: key);
  final DataUser user = data;

  @override
  Widget build(BuildContext context) {
    return Container(
      padding: EdgeInsets.all(8),
      child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [
        Expanded(
          flex: 7,
          child: Container(
            child: RichText(
              overflow: TextOverflow.ellipsis,
              maxLines: 1,
              text: TextSpan(children: [
                TextSpan(
                  text: 'Hai, ',
                  style: TextStyle(
                    fontSize: 21,
                  ),
                ),
                TextSpan(
                  text: user.name.toUpperCase(),
                  style: TextStyle(
                    fontSize: 21,
                    fontWeight: FontWeight.bold,
                  ),
                ),
              ]),
            ),
          ),
        ),
        Expanded(
          flex: 1,
          child: IconButton(
            tooltip: 'ke pengaturan akun',
            icon: const Icon(
              Icons.account_circle_outlined,
              color: Colors.white,
            ),
            onPressed: () {},
          ),
        )
      ]),
    );
  }
}

class CarouselContainer extends StatelessWidget {
  CarouselContainer({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Container(
      child: Card(
        color: Theme.of(context).colorScheme.inversePrimary,
        child: const Row(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            SizedBox(
                height: 200,
                child: Center(
                  child: Text(
                    'APCB',
                    style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
                  ),
                )),
          ],
        ),
      ),
    );
  }
}

class CategoryMenu extends StatelessWidget {
  CategoryMenu({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Container(
      padding: EdgeInsets.all(8),
      child: Column(children: <Widget>[
        Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            Text(
              'Kategori',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            TextButton(
              onPressed: () {
                Navigator.push(context, MaterialPageRoute(builder: (context) {
                  return CategoryScreen();
                }));
              },
              child: Text(
                'see all',
                style: TextStyle(
                  fontSize: 18,
                  //color: Colors.white,
                ),
              ),
            ),
          ],
        ),
        Container(
          height: 40,
          margin: EdgeInsets.symmetric(vertical: 4),
          child: CategoryListView(),
        )
      ]),
    );
  }
}

class CategoryListView extends StatelessWidget {
  CategoryListView({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return ListView.builder(
      shrinkWrap: true,
      scrollDirection: Axis.horizontal,
      itemCount: categoryShowList.length,
      itemBuilder: (context, index) {
        final CategoryList category = categoryShowList[index];
        return Container(
          margin: EdgeInsets.only(right: 8.0),
          child: OutlinedButton(
              onPressed: () {
                Navigator.push(context, MaterialPageRoute(builder: (context) {
                  return DetailCategoryScreen(category: category);
                }));
              },
              child: Text(
                category.name,
                style: TextStyle(fontSize: 14),
              )),
        );

        // return InkWell(
        //     onTap: () {
        //       ScaffoldMessenger.of(context).showSnackBar(
        //           SnackBar(content: Text('${category.name} ditekan'))
        //       );
        //     },
        //     child: Container(
        //       alignment: Alignment.center,
        //       margin: EdgeInsets.all(8.0),
        //       padding: EdgeInsets.all(8.0),
        //       decoration: BoxDecoration(
        //         border: Border.all(color: Colors.grey),
        //         borderRadius: BorderRadius.circular(10),
        //       ),
        //       child: Text(
        //         category.name,
        //         style: TextStyle(fontSize: 14),
        //       ),
        //     )
        // );
      },
    );
  }
}

class ContentMenu extends StatelessWidget {
  ContentMenu({Key? key,}) : super(key: key);
  @override
  Widget build(BuildContext context) {
    return ListView.builder(
      itemCount: categoryShowList.length,
      shrinkWrap: true,
      scrollDirection: Axis.vertical,
      physics: BouncingScrollPhysics(),
      itemBuilder: (context, index) {
        final CategoryList category = categoryShowList[index] ;
        return Container(
          margin: EdgeInsets.all(8),
            child: Column(
                children: [
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                    children: [
                      Expanded(
                        flex: 7,
                        child: Text('Praktik Terbaik di ${category.name}',
                          overflow: TextOverflow.ellipsis,
                          style: TextStyle(
                              fontSize: 18,
                              fontWeight: FontWeight.bold
                          ),
                        ),
                      ),
                      Expanded(
                        flex: 1,
                        child: IconButton(
                          icon: const Icon(
                            Icons.arrow_forward_rounded,
                            color: Colors.white,
                          ),
                          onPressed: () {
                            Navigator.push(context, MaterialPageRoute(builder: (context){
                              return DetailCategoryScreen(category: category);
                            }));
                            },
                        ),
                      )
                    ],
                  ),
                  Scrollbar(
                    child : SizedBox(
                        height: 150,
                      child: ListView(
                        scrollDirection: Axis.horizontal,
                        children: [
                          if (category.content != null && index < category.content!.length)
                            ...category.content!.map((item) => Card(
                              child: SizedBox(width: 150, child: Text(item)),
                            )).toList()
                          else
                             SizedBox(
                              child: const Text('tidak ada konten yg ditampilkan'), // Default message
                            ),
                        ]
                      )
                  )
                  )
                ]
            )
        );
      },
    );
  }
}